"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var mask_1 = require("./mask");
var validate_1 = require("./validate");
var randexp_1 = require("randexp");
var placa_1 = require("./placa");
var inscricaoestadual_1 = require("./inscricaoestadual");
var create_1 = require("./create");
var utils_1 = require("./utils");
var veiculos_1 = require("./veiculos");
var name_1 = require("./name");
var pessoas_1 = require("../addons/pessoas");
var create_2 = require("./iptu/create");
// import cnaes from '../addons/cnaes';
function aih(uf, ano, tipo, seq) {
    if (uf === void 0) { uf = 35; }
    if (ano === void 0) { ano = 19; }
    if (tipo === void 0) { tipo = 1; }
    if (seq === void 0) { seq = null; }
    if (!seq) {
        seq = utils_1.randomNumber(1000000, 9999999); // new Random().Next(1, 9999999).ToString().PadLeft(7, '0');
    }
    var cod = parseInt("" + uf + ano + tipo + seq);
    var digito = create_1.create_aih(cod);
    var result = "" + cod + digito;
    return result;
}
function celular(options) {
    if (options === void 0) { options = {}; }
    return telefone(__assign(__assign({}, options), { celular: true }));
}
function cep(options) {
    if (options === void 0) { options = {}; }
    if (!options.estado) {
        options.estado = utils_1.randomEstadoSigla();
    }
    var range = pessoas_1.CEP_ESTADO[options.estado];
    var cepNumber = utils_1.randomNumber(range[0][0], range[0][1]);
    var cep;
    if (cepNumber < 10000000) {
        cep = '0' + cepNumber.toString();
    }
    else {
        cep = cepNumber.toString();
    }
    var mask = cep.slice(0, cep.length - 3) + '-' + cep.slice(cep.length - 3, cep.length);
    return mask;
}
function cepState(state) {
    return randexp_1.randexp(validate_1.CEPRange[state]);
}
function certidao() {
    var value = utils_1.makeGenericFaker(mask_1.MASKS['certidao'])();
    var certidao = utils_1.getAllDigits(value);
    var check = create_1.create_certidao(certidao);
    return certidao.substr(0, certidao.length - 2) + check;
}
function chassi() {
    var chassi = utils_1.makeGenericFaker(mask_1.MASKS['chassi'])();
    chassi = chassi.replace(/i|I|o|O|q|Q/g, 'A');
    return chassi;
}
function cid() {
    // let chassi = makeGenericFaker(MASKS['chassi'])();
    // chassi = chassi.replace(/i|I|o|O|q|Q/g, 'A');
    // return chassi;
}
var cnae = utils_1.makeGenericFaker(mask_1.MASKS['cnae']);
function cnh() {
    var cnh = utils_1.makeGenericFaker(mask_1.MASKS['cnh'])();
    var nodigits = cnh;
    var check = create_1.create_cnh(nodigits);
    return cnh.substr(0, cnh.length - 2) + check;
}
function cnpj() {
    var cnpj = utils_1.makeGenericFaker(mask_1.MASKS['cnpj'])();
    cnpj = cnpj.replace(/[^\d]+/g, '');
    var restos = create_1.create_cnpj(cnpj) || [0, 1];
    cnpj = cnpj.substr(0, cnpj.length - 2) + restos[0] + restos[0];
    restos = create_1.create_cnpj(cnpj) || [0, 1];
    return cnpj.substr(0, cnpj.length - 1) + restos[1];
}
function cns() {
    var cns;
    do {
        cns = utils_1.makeGenericFaker(mask_1.MASKS['cns'])();
        cns = utils_1.getAllDigits(cns);
        var primeiroDigito = parseInt(cns[0]);
        if (primeiroDigito < 3) {
            var cnsDigits = cns.split('');
            cnsDigits[cnsDigits.length - 2] = '0';
            cnsDigits[cnsDigits.length - 3] = '0';
            cnsDigits[cnsDigits.length - 4] = '0';
            cns = cnsDigits.join();
        }
        var digito = create_1.create_cns(cns);
        cns = cns.substr(0, cns.length - 2) + digito;
    } while (!validate_1.validate_cns(cns));
    return cns;
}
var contabanco = utils_1.makeGenericFaker(mask_1.MASKS['contabanco']);
function cpf() {
    var cpf_fake = utils_1.makeGenericFaker(mask_1.MASKS['cpf'])();
    var restos = create_1.create_cpf(cpf_fake);
    if (!restos) {
        throw new Error('Could not create cpf on faker cpf');
    }
    cpf_fake = cpf_fake.substr(0, cpf_fake.length - 2) + restos[0] + restos[1];
    restos = create_1.create_cpf(cpf_fake);
    if (!restos) {
        throw new Error('Could not create cpf on faker cpf');
    }
    cpf_fake = cpf_fake.substr(0, cpf_fake.length - 2) + restos[0] + restos[1];
    return cpf_fake;
}
var cpfcnpj = utils_1.makeGenericFaker(mask_1.MASKS['cpfcnpj']);
var cartaocredito = utils_1.makeGenericFaker(mask_1.MASKS['cartaocredito']);
function currency() {
    var x = Math.random() * 10000;
    var final = x.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
    if (final[final.length - 3] === '.') {
        final = final.replace(/\./g, '#');
        final = final.replace(/\,/g, '.');
        final = final.replace(/\#/g, ',');
    }
    return final;
}
function currencyNumber() {
    var x = Math.random() * 10000;
    return parseFloat(x.toFixed(2));
}
function data(config) {
    if (config === void 0) { config = {}; }
    var date = new Date();
    if (config.dias) {
        date.setDate(date.getDate() + config.dias);
    }
    if (config.meses) {
        date.setMonth(date.getMonth() + config.meses);
    }
    if (config.idadeMin && config.idadeMax) {
        config.anos = -utils_1.randomNumber(config.idadeMin, config.idadeMax);
    }
    if (config.anos) {
        date.setFullYear(date.getFullYear() + config.anos);
    }
    var month = date.getMonth() + 1;
    if (month < 10) {
        month = '0' + month;
    }
    var day = date.getDate();
    if (day < 10) {
        day = '0' + day;
    }
    return day + "/" + month + "/" + date.getFullYear();
}
function ect() {
    var ect = utils_1.makeGenericFaker(mask_1.MASKS['ect'])();
    var dv = create_1.create_ect(ect.substr(0, ect.length - 1));
    return ect.substr(0, ect.length - 1) + dv;
}
function email(options) {
    if (options === void 0) { options = {}; }
    var nome = utils_1.randArray(pessoas_1.NOMES_MASCULINOS);
    if (options.nome) {
        nome = options.nome;
    }
    nome = utils_1.slugify(nome);
    var empresa = nome;
    if (options.empresa) {
        empresa = options.empresa;
    }
    return nome + '@' + site({ nome: empresa, url: '' });
}
function empresa(options) {
    if (options === void 0) { options = {}; }
    if (!options.estado) {
        options.estado = utils_1.randomEstadoSigla();
    }
    var enderecoVal = endereco(options);
    var inscricaoestadualVal = inscricaoestadual(enderecoVal.estadoSigla);
    var dataAbertura = data({
        idadeMin: 4,
        idadeMax: 20
    });
    var fundador1 = pessoa(options);
    var fundador2 = pessoa(options);
    var fundadores = [
        fundador1,
        fundador2
    ];
    var nome = utils_1.randArray(pessoas_1.EMPRESAS_TIPOS) + ' ' + utils_1.randArray(pessoas_1.EMPRESAS_NOMES);
    // const site = faker.site();
    var emailVal = email({
        nome: 'contato',
        empresa: nome
    });
    return {
        nome: nome,
        email: emailVal,
        inscricaoestadual: inscricaoestadualVal,
        fundadores: fundadores,
        cnpj: cnpj(),
        endereco: enderecoVal,
        telefone: telefone({
            estado: enderecoVal.estadoSigla
        }),
        celular: celular({
            estado: enderecoVal.estadoSigla
        }),
        dataAbertura: dataAbertura
    };
}
function endereco(options) {
    if (options === void 0) { options = {}; }
    if (!options.estado) {
        options.estado = utils_1.randomEstadoSigla();
    }
    var estadoFound = name_1.LOCALIZACAO_ESTADOS.find(function (e) { return e.uf.toLowerCase() === options.estado; }) || name_1.LOCALIZACAO_ESTADOS[0];
    var cidades = name_1.LOCALIZACAO_CIDADES.filter(function (c) { return c[1] === estadoFound.nome; });
    var cidade = utils_1.randArray(cidades);
    var estado = cidade[1].toLowerCase();
    estado = name_1.LOCALIZACAO_ESTADOS.find(function (e) { return e.nome.toLowerCase() === estado.toLowerCase(); });
    return {
        cep: cep(),
        logradouro: utils_1.randArray(name_1.LOCALIZACAO_RUAS),
        complemento: utils_1.randArray(name_1.LOCALIZACAO_COMPLEMENTOS) + ' ' + number({ min: 1, max: 10, decimals: 0 }),
        numero: number({ min: 1, decimals: 0 }),
        bairro: utils_1.randArray(name_1.LOCALIZACAO_BAIRROS),
        cidade: cidade[0],
        estado: cidade[1],
        estadoSigla: estado.uf
    };
}
var inscricaoestadual = function (estadoInput) {
    var estado = estadoInput.toLowerCase();
    if (!mask_1.MASKSIE) {
        return;
    }
    var funcIE = utils_1.getSpecialProperty(mask_1.MASKSIE, estado);
    var val = utils_1.makeGenericFaker(funcIE)();
    val = val.match(/\d/g).join('');
    var newval = inscricaoestadual_1.generateInscricaoEstadual[estado](val);
    return newval;
};
function iptu(estado, cidade) {
    return create_2.faker_iptu(estado, cidade);
}
function number(options) {
    if (options === void 0) { options = {}; }
    if (!options.max) {
        options.max = 10000;
    }
    if (options.min === undefined) {
        options.min = 0;
    }
    if (options.decimals === undefined) {
        options.decimals = 2;
    }
    var x = (Math.random() * options.max) + options.min;
    if (options.decimals === 0) {
        return Math.floor(x);
    }
    return parseFloat(x.toFixed(options.decimals));
}
var porcentagem = utils_1.makeGenericFaker(mask_1.MASKS['porcentagem']);
function pessoa(options) {
    if (options === void 0) { options = {}; }
    if (!options.estado) {
        options.estado = utils_1.randomEstadoSigla();
    }
    var dataNascimento = data({
        idadeMin: 18,
        idadeMax: 40
    });
    var altura = '1.' + utils_1.randomNumber(35, 90);
    var peso = utils_1.randomNumber(50, 120);
    var signo = pessoas_1.getAstro(dataNascimento);
    var tipoSanguineo = utils_1.randArray(pessoas_1.TIPOS_SANGUINEOS);
    var sobrenomePai = utils_1.randArray(pessoas_1.SOBRENOMES);
    var sobrenomeMae = utils_1.randArray(pessoas_1.SOBRENOMES);
    var nome = utils_1.randArray(pessoas_1.NOMES_MASCULINOS) + ' ' + sobrenomeMae + ' ' + sobrenomePai;
    var mae = utils_1.randArray(pessoas_1.NOMES_FEMININOS) + ' ' + sobrenomeMae + ' ' + sobrenomePai;
    var pai = utils_1.randArray(pessoas_1.NOMES_MASCULINOS) + ' ' + utils_1.randArray(pessoas_1.SOBRENOMES) + ' ' + sobrenomePai;
    return {
        nome: nome,
        mae: mae,
        pai: pai,
        site: site(),
        email: email(),
        senha: senha(),
        rg: rg(options),
        cpf: cpf(),
        telefone: telefone(options),
        celular: celular(options),
        dataNascimento: dataNascimento,
        endereco: endereco(options),
        usuario: usuario(nome),
        signo: signo, tipoSanguineo: tipoSanguineo, altura: altura, peso: peso
    };
}
function pispasep() {
    var pis = utils_1.makeGenericFaker(mask_1.MASKS['pispasep'])();
    var digit = create_1.create_pispasep(pis);
    var values = pis.split('');
    values[values.length - 1] = digit;
    return values;
}
function placa() {
    var placa;
    do {
        placa = utils_1.makeGenericFaker(mask_1.MASKS['placa'])();
    } while (!placa_1.validate_placa(placa));
    return placa;
}
var processo = utils_1.makeGenericFaker(mask_1.MASKS['processo']);
function renavam() {
    var renavam = utils_1.makeGenericFaker(mask_1.MASKS['renavam'])();
    var dv = create_1.create_renavam(renavam);
    return renavam.substr(0, renavam.length - 1) + dv;
}
function rg(options) {
    if (options === void 0) { options = {}; }
    if (!options.estado) {
        options.estado = utils_1.randomEstadoSigla();
    }
    var estado = options.estado.split('');
    var makeRg = utils_1.makeGenericFaker(mask_1.MASKS['rg'], {
        0: function () { return estado[0]; },
        1: function () { return estado[1]; }
    });
    return makeRg();
}
function senha(options) {
    if (options === void 0) { options = {}; }
    if (!options.size) {
        options.size = 8;
    }
    var pass = [
        utils_1.randomLetter().toLowerCase(),
        utils_1.randomLetter().toUpperCase(),
        utils_1.randomNumber(0, 9),
        utils_1.randArray(['!', '@', '#', '$', '%', '^', '&', '*'])
    ];
    var i = 4;
    for (i = 4; i <= options.size; i++) {
        var newchar = utils_1.randArray([
            utils_1.randomLetter().toLowerCase(),
            utils_1.randomLetter().toUpperCase(),
            utils_1.randomNumber(0, 9),
            utils_1.randArray(['!', '@', '#', '$', '%', '^', '&', '*'])
        ]);
        pass.push(newchar);
    }
    return pass.join('');
}
function site(options) {
    if (options === void 0) { options = {}; }
    var nome = utils_1.randArray(pessoas_1.EMPRESAS_TIPOS) + ' ' + utils_1.randArray(pessoas_1.EMPRESAS_NOMES);
    var dominio = '.com.br';
    var url = utils_1.randArray(['http://', 'https://']);
    if (options.nome) {
        nome = options.nome;
    }
    if (options.dominio) {
        dominio = options.dominio;
    }
    if (options.url !== undefined) {
        url = options.url;
    }
    nome = utils_1.slugify(nome);
    return url + nome + dominio;
}
var sped = utils_1.makeGenericFaker(mask_1.MASKS['sped']);
function telefone(options) {
    if (options === void 0) { options = {}; }
    var telefone = utils_1.makeGenericFaker(mask_1.MASKS['telefone'])();
    if (options.estado) {
        var telefones = telefone.toString().split('');
        var ddd = pessoas_1.TELEFONE_ESTADO[options.estado.toLowerCase()].toString();
        telefones[1] = ddd[0];
        telefones[2] = ddd[1];
        telefone = telefones.join('');
    }
    if (options.celular) {
        var telefones = telefone.toString().split('');
        telefones[5] = '9';
        telefone = telefones.join('');
    }
    return telefone;
}
var time = utils_1.makeGenericFaker(mask_1.MASKS['time']);
function titulo() {
    var titulo;
    do {
        titulo = utils_1.makeGenericFaker(mask_1.MASKS['titulo'])();
        var number_1 = titulo.substr(0, titulo.length - 2);
        if (number_1.substr(-2) === '29') {
            var numbers = number_1.split();
            numbers[numbers.length - 1] = '8';
            number_1 = numbers.join();
        }
        try {
            var dig = create_1.create_titulo(number_1);
            titulo = number_1 + dig[0] + dig[1];
        }
        catch (e) {
        }
    } while (!validate_1.validate_titulo(titulo));
    return titulo;
}
function veiculo() {
    var veiculo = utils_1.randArray(veiculos_1.VEICULOS);
    return {
        placa: placa(),
        chassi: chassi(),
        marca: veiculo.marca,
        modelo: veiculo.modelo,
        categoria: utils_1.randArray(veiculos_1.VEICULOS_CATEGORIAS),
        especie: utils_1.randArray(veiculos_1.VEICULOS_ESPECIES),
        restricao: utils_1.randArray(veiculos_1.VEICULOS_RESTRICOES),
        tipo: utils_1.randArray(veiculos_1.VEICULOS_TIPOS),
        carroceria: utils_1.randArray(veiculos_1.VEICULOS_CARROCERIAS),
        combustivel: utils_1.randArray(veiculos_1.VEICULOS_COMBUSTIVEIS),
        cor: utils_1.randArray(utils_1.CORES)
    };
}
function usuario(nome) {
    if (!nome) {
        var sobrenomePai = utils_1.randArray(pessoas_1.SOBRENOMES);
        nome = utils_1.randArray(pessoas_1.NOMES_MASCULINOS) + ' ' + sobrenomePai;
    }
    return utils_1.slugify(nome);
}
exports.default = {
    aih: aih,
    cartaocredito: cartaocredito,
    celular: celular,
    cep: cep,
    cepState: cepState,
    certidao: certidao,
    chassi: chassi,
    cid: cid,
    cnae: cnae,
    cnh: cnh,
    cnpj: cnpj,
    cns: cns,
    contabanco: contabanco,
    cpf: cpf,
    cpfcnpj: cpfcnpj,
    currency: currency,
    currencyNumber: currencyNumber,
    data: data,
    ect: ect,
    email: email,
    empresa: empresa,
    endereco: endereco,
    inscricaoestadual: inscricaoestadual,
    iptu: iptu,
    number: number,
    pessoa: pessoa,
    pispasep: pispasep,
    placa: placa,
    porcentagem: porcentagem,
    processo: processo,
    renavam: renavam,
    rg: rg,
    senha: senha,
    site: site,
    sped: sped,
    telefone: telefone,
    time: time,
    titulo: titulo,
    veiculo: veiculo,
    usuario: usuario,
};
//# sourceMappingURL=faker.js.map