import { Component, Input, NgModule, forwardRef } from '@angular/core';
import { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { IonicModule } from 'ionic-angular/index';

var CurrencyMask = (function () {
    function CurrencyMask() {
    }
    /**
     * @param {?} v
     * @return {?}
     */
    CurrencyMask.prototype.detectAmountReverse = function (v) {
        if (typeof (v) === 'number') {
            return this.fixAmountReverse(v);
        }
        return v;
    };
    /**
     * @param {?} v
     * @return {?}
     */
    CurrencyMask.prototype.detectAmount = function (v) {
        if (v) {
            this.n = v[v.length - 1];
            if (isNaN(this.n)) {
                v = v.substring(0, v.length - 1);
                return v;
            }
            v = this.fixAmount(v);
            return v;
        }
    };
    /**
     * @param {?} a
     * @return {?}
     */
    CurrencyMask.prototype.fixAmountReverse = function (a) {
        return a.toFixed(2).replace('.', ',');
    };
    /**
     * @param {?} a
     * @return {?}
     */
    CurrencyMask.prototype.fixAmount = function (a) {
        var /** @type {?} */ period = a.indexOf(',');
        if (period > -1) {
            a = a.substring(0, period) + a.substring(period + 1);
        }
        this.len = a.length;
        while (this.len < 3) {
            a = '0' + a;
            this.len = a.length;
        }
        a = a.substring(0, this.len - 2) + ',' + a.substring(this.len - 2, this.len);
        while (a.length > 4 && (a[0] === '0')) {
            a = a.substring(1);
        }
        if (a[0] === ',') {
            a = '0' + a;
        }
        a = this.removeAllDots(a);
        var /** @type {?} */ spComma = a.split(',');
        if (spComma[0].length >= 4) {
            var /** @type {?} */ hundreds = [];
            var /** @type {?} */ b_1 = spComma[0];
            var /** @type {?} */ h = [];
            while (h = b_1.match(/.{1,3}$/g)) {
                if (h && h[0].length === 3) {
                    hundreds.push(h[0]);
                }
                else {
                    break;
                }
                b_1 = b_1.replace(h[0], '');
            }
            hundreds = hundreds.reverse();
            hundreds.forEach(function (hd) {
                b_1 += '.' + hd;
            });
            b_1 = b_1.replace(/^\./g, '');
            a = b_1.concat(',').concat(spComma[1]);
        }
        return (a);
    };
    /**
     * @param {?} a
     * @return {?}
     */
    CurrencyMask.prototype.removeAllDots = function (a) {
        return a.replace(/\./g, '');
    };
    return CurrencyMask;
}());

var IonCurrencyMaskComponent = (function () {
    function IonCurrencyMaskComponent() {
        this.typeLabel = '';
        this.clearInput = false;
        this.lastChild = false;
        this.disabled = false;
        this.currencyMask = new CurrencyMask();
        this.propagateChange = function (_) { };
    }
    /**
     * @return {?}
     */
    IonCurrencyMaskComponent.prototype.registerOnTouched = function () { };
    /**
     * @param {?} obj
     * @return {?}
     */
    IonCurrencyMaskComponent.prototype.writeValue = function (obj) {
        this.valueIonInput = this.currencyMask.detectAmountReverse(obj);
        if (obj) {
            this.keyUpEvent(null);
            this.value = obj;
        }
        else {
            this.value = null;
        }
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    IonCurrencyMaskComponent.prototype.registerOnChange = function (fn) {
        this.propagateChange = fn;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    IonCurrencyMaskComponent.prototype.onChange = function (event) {
        if (this.valueIonInput) {
            this.value = Number.parseFloat(this.valueIonInput.replace(/[\.]/g, '').replace(/[,]/g, '.'));
        }
        else {
            this.value = null;
        }
        this.propagateChange(this.value);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    IonCurrencyMaskComponent.prototype.keyUpEvent = function (event) {
        this.valueIonInput = this.currencyMask.detectAmount(this.valueIonInput);
        this.onChange(event);
    };
    /**
     * @param {?} type
     * @return {?}
     */
    IonCurrencyMaskComponent.prototype.getAttrLabel = function (type) {
        return this.typeLabel === type;
    };
    /**
     * @return {?}
     */
    IonCurrencyMaskComponent.prototype.getAttrClearInput = function () {
        return this.clearInput ? '' : null;
    };
    /**
     * @return {?}
     */
    IonCurrencyMaskComponent.prototype.getAttrPlaceholder = function () {
        return this.placeholder ? this.placeholder : '';
    };
    return IonCurrencyMaskComponent;
}());
IonCurrencyMaskComponent.decorators = [
    { type: Component, args: [{
                selector: 'ion-currency-mask',
                template: "<ion-item> <ion-label *ngIf=\"getAttrLabel('stacked') && label\" for=\"ionInput\" stacked>{{label}}</ion-label> <ion-label *ngIf=\"getAttrLabel('floating') && label\" for=\"ionInput\" floating>{{label}}</ion-label> <ion-label *ngIf=\"getAttrLabel('fixed') && label\" for=\"ionInput\" fixed>{{label}}</ion-label> <ion-label *ngIf=\"getAttrLabel('') && label\" for=\"ionInput\">{{label}}</ion-label> <ion-input id=\"ionInput\" type=\"tel\" [disabled]=\"disabled ? '' : null\" (keyup)=\"keyUpEvent($event)\" (change)=\"onChange($event)\" [(ngModel)]=\"valueIonInput\" [attr.clearInput]=\"getAttrClearInput()\" [placeholder]=\"getAttrPlaceholder()\"> </ion-input> </ion-item> <div *ngIf=\"!lastChild\"></div> ",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(function () { return IonCurrencyMaskComponent; }),
                        multi: true
                    }
                ]
            },] },
];
/**
 * @nocollapse
 */
IonCurrencyMaskComponent.ctorParameters = function () { return []; };
IonCurrencyMaskComponent.propDecorators = {
    'placeholder': [{ type: Input },],
    'label': [{ type: Input },],
    'typeLabel': [{ type: Input },],
    'clearInput': [{ type: Input },],
    'lastChild': [{ type: Input },],
    'disabled': [{ type: Input },],
};

var IonCurrencyMaskModule = (function () {
    function IonCurrencyMaskModule() {
    }
    return IonCurrencyMaskModule;
}());
IonCurrencyMaskModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    IonicModule,
                    FormsModule
                ],
                declarations: [
                    IonCurrencyMaskComponent
                ],
                exports: [
                    IonCurrencyMaskComponent
                ]
            },] },
];
/**
 * @nocollapse
 */
IonCurrencyMaskModule.ctorParameters = function () { return []; };

export { IonCurrencyMaskModule, IonCurrencyMaskComponent };
