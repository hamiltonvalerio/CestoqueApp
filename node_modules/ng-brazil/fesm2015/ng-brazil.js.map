{"version":3,"file":"ng-brazil.js","sources":["ng://ng-brazil/cpf/validator.ts","ng://ng-brazil/cpf/directive.ts","ng://ng-brazil/cpf/pipe.ts","ng://ng-brazil/cnpj/validator.ts","ng://ng-brazil/cnpj/directive.ts","ng://ng-brazil/cnpj/pipe.ts","ng://ng-brazil/telefone/validator.ts","ng://ng-brazil/telefone/directive.ts","ng://ng-brazil/telefone/pipe.ts","ng://ng-brazil/celular/validator.ts","ng://ng-brazil/celular/directive.ts","ng://ng-brazil/celular/pipe.ts","ng://ng-brazil/inscricaoestadual/validator.ts","ng://ng-brazil/inscricaoestadual/directive.ts","ng://ng-brazil/inscricaoestadual/pipe.ts","ng://ng-brazil/cep/validator.ts","ng://ng-brazil/cep/directive.ts","ng://ng-brazil/cep/pipe.ts","ng://ng-brazil/currency/validator.ts","ng://ng-brazil/currency/directive.ts","ng://ng-brazil/currency/pipe.ts","ng://ng-brazil/number/validator.ts","ng://ng-brazil/number/directive.ts","ng://ng-brazil/number/pipe.ts","ng://ng-brazil/placa/validator.ts","ng://ng-brazil/placa/directive.ts","ng://ng-brazil/placa/pipe.ts","ng://ng-brazil/percentage/validator.ts","ng://ng-brazil/percentage/directive.ts","ng://ng-brazil/percentage/pipe.ts","ng://ng-brazil/renavam/validator.ts","ng://ng-brazil/renavam/directive.ts","ng://ng-brazil/renavam/pipe.ts","ng://ng-brazil/pispasep/validator.ts","ng://ng-brazil/pispasep/directive.ts","ng://ng-brazil/pispasep/pipe.ts","ng://ng-brazil/rg/validator.ts","ng://ng-brazil/rg/directive.ts","ng://ng-brazil/rg/pipe.ts","ng://ng-brazil/time/validator.ts","ng://ng-brazil/time/directive.ts","ng://ng-brazil/time/pipe.ts","ng://ng-brazil/titulo/validator.ts","ng://ng-brazil/titulo/directive.ts","ng://ng-brazil/titulo/pipe.ts","ng://ng-brazil/angular2TextMask.ts","ng://ng-brazil/lib.module.ts","ng://ng-brazil/ng-brazil.ts"],"sourcesContent":["import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const cpf: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.cpf(v) ? null : {cpf: true};\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { cpf } from './validator';\n\nconst CPF_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => CPFValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[cpf][formControlName],[cpf][formControl],[cpf][ngModel]',\n  providers: [CPF_VALIDATOR]\n})\nexport class CPFValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return cpf(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'cpf',\n})\nexport class CPFPipe implements PipeTransform {\n    transform(cpfValue: any) {\n      return maskBr.cpf(cpfValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const cnpj: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.cnpj(v) ? null : {cnpj: true};\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { cnpj } from './validator';\n\n\nconst CNPJ_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => CNPJValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[cnpj][formControlName],[cnpj][formControl],[cnpj][ngModel]',\n  providers: [CNPJ_VALIDATOR]\n})\nexport class CNPJValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return cnpj(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'cnpj',\n})\nexport class CNPJPipe implements PipeTransform {\n    transform(cnpjValue: any) {\n      return maskBr.cnpj(cnpjValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const telefone: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.telefone(v) ? null : { telefone: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { telefone } from './validator';\n\nconst TELEFONE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => TelefoneValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[telefone][formControlName],[telefone][formControl],[telefone][ngModel]',\n  providers: [TELEFONE_VALIDATOR]\n})\nexport class TelefoneValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return telefone(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'telefone',\n})\nexport class TelefonePipe implements PipeTransform {\n    transform(telefoneValue: any) {\n        return maskBr.telefone(telefoneValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const celular: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.celular(v) ? null : { celular: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { celular } from './validator';\n\nconst CELULAR_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => CelularValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[celular][formControlName],[celular][formControl],[celular][ngModel]',\n  providers: [CELULAR_VALIDATOR]\n})\nexport class CelularValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return celular(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'celular',\n})\nexport class CelularPipe implements PipeTransform {\n    transform(celularValue: any) {\n        return maskBr.celular(celularValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const inscricaoestadual = (estado: string):\n  ValidatorFn => {\n    return (control: AbstractControl): { [key: string]: boolean } => {\n      if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n      }\n      const v: string = control.value;\n      return validateBr.inscricaoestadual(v, estado) ? null : { inscricaoestadual: true };\n    };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { inscricaoestadual } from './validator';\n\n\nconst INSCRICAOESTADUAL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => InscricaoEstadualValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[inscricaoestadual][formControlName],[inscricaoestadual][formControl],[inscricaoestadual][ngModel]',\n  providers: [INSCRICAOESTADUAL_VALIDATOR]\n})\nexport class InscricaoEstadualValidator implements Validator {\n  validate(c: AbstractControl): { [key: string]: any } {\n    return inscricaoestadual('mg')(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n  name: 'inscricaoestadual',\n})\nexport class InscricaoEstadualPipe implements PipeTransform {\n  transform(inscricaoestadualValue: any, estado: any) {\n    return maskBr.inscricaoestadual(inscricaoestadualValue, estado);\n  }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const cep: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.cep(v) ? null : { cep: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { cep } from './validator';\n\nconst CEP_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => CEPValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[cep][formControlName],[cep][formControl],[cep][ngModel]',\n  providers: [CEP_VALIDATOR]\n})\nexport class CEPValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return cep(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'cep',\n})\nexport class CEPPipe implements PipeTransform {\n    transform(cepValue: any) {\n        return maskBr.cep(cepValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const currency: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.currency(v) ? null : { currency: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { currency } from './validator';\n\nconst CURRENCY_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => CURRENCYValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[currency][formControlName],[currency][formControl],[currency][ngModel]',\n  providers: [CURRENCY_VALIDATOR]\n})\nexport class CURRENCYValidator implements Validator {\n  validate(c: AbstractControl): { [key: string]: any } {\n    return currency(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n  name: 'currencyBrazil',\n})\nexport class CURRENCYPipe implements PipeTransform {\n  transform(currencyValue: any) {\n    return maskBr.currency(currencyValue);\n  }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const number: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.number(v) ? null : { number: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { number } from './validator';\n\nconst NUMBER_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => NUMBERValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[number][formControlName],[number][formControl],[number][ngModel]',\n  providers: [NUMBER_VALIDATOR]\n})\nexport class NUMBERValidator implements Validator {\n  validate(c: AbstractControl): { [key: string]: any } {\n    return number(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n  name: 'numberBrazil',\n})\nexport class NUMBERPipe implements PipeTransform {\n  transform(numberValue: any) {\n    return maskBr.number(numberValue);\n  }\n}\n","import { AbstractControl, Validators, ValidatorFn, RequiredValidator } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const placa: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n\n    const v: string = control.value;\n    return validateBr.placa(v) ? null : {placa: true};\n}\n","import { Directive, forwardRef} from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { placa } from './validator';\n\nconst PLACA_VALIDATOR: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PLACAValidator),\n    multi: true\n};\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[placa][formControlName],[placa][formControl],[placa][ngModel]',\n    providers: [PLACA_VALIDATOR]\n})\nexport class PLACAValidator implements Validator {\n    validate(c: AbstractControl): {[key: string]: any} {\n        return placa(c);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n  name: 'placa'\n})\nexport class PLACAPipe implements PipeTransform {\n  transform(placaValue: any) {\n    return maskBr.placa(placaValue);\n  }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const percentage: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.porcentagem(v) ? null : { percentage: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { percentage } from './validator';\n\nconst PERCENTAGE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => PERCENTAGEValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[percentage][formControlName],[percentage][formControl],[percentage][ngModel]',\n  providers: [PERCENTAGE_VALIDATOR]\n})\nexport class PERCENTAGEValidator implements Validator {\n  validate(c: AbstractControl): { [key: string]: any } {\n    return percentage(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n  name: 'percentage',\n})\nexport class PERCENTAGEPipe implements PipeTransform {\n  transform(percentageValue: any) {\n    return maskBr.porcentagem(percentageValue);\n  }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const renavam: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.renavam(v) ? null : { renavam: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { renavam } from './validator';\n\nconst RENAVAM_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => RenavamValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[renavam][formControlName],[renavam][formControl],[renavam][ngModel]',\n  providers: [RENAVAM_VALIDATOR]\n})\nexport class RenavamValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return renavam(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'renavam',\n})\nexport class RenavamPipe implements PipeTransform {\n    transform(renavamValue: any) {\n        return maskBr.renavam(renavamValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const pispasep: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.pispasep(v) ? null : { pispasep: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { pispasep } from './validator';\n\nconst PISPASE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => PispasepValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[pispasep][formControlName],[pispasep][formControl],[pispasep][ngModel]',\n  providers: [PISPASE_VALIDATOR]\n})\nexport class PispasepValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return pispasep(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'pispasep',\n})\nexport class PispasepPipe implements PipeTransform {\n    transform(pispasepValue: any) {\n        return maskBr.pispasep(pispasepValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const rg: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.rg(v) ? null : {rg: true};\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { rg } from './validator';\n\nconst RG_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => RGValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[rg][formControlName],[rg][formControl],[rg][ngModel]',\n  providers: [RG_VALIDATOR]\n})\nexport class RGValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return rg(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'rg',\n})\nexport class RGPipe implements PipeTransform {\n    transform(rgValue: any) {\n      return maskBr.rg(rgValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const time: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.time(v) ? null : {time: true};\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { time } from './validator';\n\nconst TIME_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => TIMEValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[time][formControlName],[time][formControl],[time][ngModel]',\n  providers: [TIME_VALIDATOR]\n})\nexport class TIMEValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return time(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'time',\n})\nexport class TIMEPipe implements PipeTransform {\n    transform(timeValue: any) {\n        return maskBr.time(timeValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn, RequiredValidator } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const titulo: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n\n    const v: string = control.value;\n    return validateBr.titulo(v) ? null : {titulo: true};\n}\n","import { Directive, forwardRef} from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { titulo } from './validator';\n\nconst TITULO_VALIDATOR: any = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => TITULOValidator),\n    multi: true\n};\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[titulo][formControlName],[titulo][formControl],[titulo][ngModel]',\n    providers: [TITULO_VALIDATOR]\n})\nexport class TITULOValidator implements Validator {\n    validate(c: AbstractControl): {[key: string]: any} {\n        return titulo(c);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n  name: 'titulo'\n})\nexport class TITULOPipe implements PipeTransform {\n  transform(tituloValue: any) {\n    return maskBr.titulo(tituloValue);\n  }\n}\n","import {\n  Directive, ElementRef, forwardRef, Input, Inject, NgModule,\n  OnChanges, Optional, Provider, SimpleChanges, Injectable, RendererFactory2\n} from '@angular/core'\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, COMPOSITION_BUFFER_MODE } from '@angular/forms'\nimport { ÉµgetDOM as getDOM, BrowserModule } from '@angular/platform-browser'\nimport { createTextMaskInputElement } from 'text-mask-core/dist/textMaskCore'\n\nexport class TextMaskConfig {\n  mask: Array<string | RegExp> | ((raw: string) => Array<string | RegExp>) | false\n  guide?: boolean\n  placeholderChar?: string\n  pipe?: (conformedValue: string, config: TextMaskConfig) => false | string | object\n  keepCharPositions?: boolean\n  showMask?: boolean\n}\n\nexport const MASKEDINPUT_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MaskedInputDirective),\n  multi: true\n}\n\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid(): boolean {\n  const userAgent = getDOM() ? getDOM().getUserAgent() : ''\n  return /android (\\d+)/.test(userAgent.toLowerCase())\n}\n\n@Injectable()\n@Directive({\n  host: {\n    '(input)': '_handleInput($event.target.value)',\n    '(blur)': 'onTouched()',\n    '(compositionstart)': '_compositionStart()',\n    '(compositionend)': '_compositionEnd($event.target.value)'\n  },\n  selector: '[textMask]',\n  exportAs: 'textMask',\n  providers: [MASKEDINPUT_VALUE_ACCESSOR]\n})\nexport class MaskedInputDirective implements ControlValueAccessor, OnChanges {\n  @Input('textMask') textMaskConfig: TextMaskConfig = {\n    mask: [],\n    guide: true,\n    placeholderChar: '_',\n    pipe: undefined,\n    keepCharPositions: false,\n  }\n\n  onChange = (_: any) => { }\n  onTouched = () => { }\n\n  private textMaskInputElement: any\n  private inputElement: HTMLInputElement\n  private _renderer: any;\n  /** Whether the user is creating a composition string (IME events). */\n  private _composing = false\n\n  constructor(\n    rendererFactory: RendererFactory2,\n    private _elementRef: ElementRef,\n    @Optional() @Inject(COMPOSITION_BUFFER_MODE) private _compositionMode: boolean\n  ) {\n    this._renderer = rendererFactory.createRenderer(null, null);\n    if (this._compositionMode == null) {\n      this._compositionMode = !_isAndroid()\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._setupMask(true)\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(this.inputElement.value)\n    }\n  }\n\n  writeValue(value: any) {\n    this._setupMask()\n\n    // set the initial value for cases where the mask is disabled\n    const normalizedValue = value == null ? '' : value\n    this._renderer.setProperty(this.inputElement, 'value', normalizedValue)\n\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(value)\n    }\n  }\n\n  registerOnChange(fn: (_: any) => void): void { this.onChange = fn }\n  registerOnTouched(fn: () => void): void { this.onTouched = fn }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled)\n  }\n\n\n  _handleInput(value) {\n    if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n      this._setupMask()\n\n      if (this.textMaskInputElement !== undefined) {\n        this.textMaskInputElement.update(value)\n\n        // get the updated value\n        value = this.inputElement.value\n        this.onChange(value)\n      }\n    }\n  }\n\n  _setupMask(create = false) {\n    if (!this.inputElement) {\n      if (this._elementRef.nativeElement.tagName.toUpperCase() === 'INPUT') {\n        // `textMask` directive is used directly on an input element\n        this.inputElement = this._elementRef.nativeElement\n      } else {\n        // `textMask` directive is used on an abstracted input element, `md-input-container`, etc\n        this.inputElement = this._elementRef.nativeElement.getElementsByTagName('INPUT')[0]\n      }\n    }\n\n    if (this.inputElement && create) {\n      this.textMaskInputElement = createTextMaskInputElement(\n        Object.assign({ inputElement: this.inputElement }, this.textMaskConfig)\n      )\n    }\n\n  }\n\n  _compositionStart(): void { this._composing = true }\n\n  _compositionEnd(value: any): void {\n    this._composing = false\n    this._compositionMode && this._handleInput(value)\n  }\n}\n\n@NgModule({\n  imports: [\n    BrowserModule\n  ],\n  declarations: [MaskedInputDirective],\n  exports: [MaskedInputDirective]\n})\nexport class TextMaskModule { }\n\nexport { conformToMask } from 'text-mask-core/dist/textMaskCore'","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { cpf } from './cpf/validator';\nimport { CPFValidator } from './cpf/directive';\nimport { CPFPipe } from './cpf/pipe';\n\nimport { cnpj } from './cnpj/validator';\nimport { CNPJValidator } from './cnpj/directive';\nimport { CNPJPipe } from './cnpj/pipe';\n\nimport { telefone } from './telefone/validator';\nimport { TelefoneValidator } from './telefone/directive';\nimport { TelefonePipe } from './telefone/pipe';\n\nimport { celular } from './celular/validator';\nimport { CelularValidator } from './celular/directive';\nimport { CelularPipe } from './celular/pipe';\n\nimport { inscricaoestadual } from './inscricaoestadual/validator';\nimport { InscricaoEstadualValidator } from './inscricaoestadual/directive';\nimport { InscricaoEstadualPipe } from './inscricaoestadual/pipe';\n\nimport { CEPValidator } from './cep/directive';\nimport { CEPPipe } from './cep/pipe';\nimport { cep } from './cep/validator';\n\n\nimport { currency } from './currency/validator';\nimport { CURRENCYValidator } from './currency/directive';\nimport { CURRENCYPipe } from './currency/pipe';\n\nimport { number } from './number/validator';\nimport { NUMBERValidator } from './number/directive';\nimport { NUMBERPipe } from './number/pipe';\n\n\n\nimport { placa } from './placa/validator';\nimport { PLACAValidator } from './placa/directive';\nimport { PLACAPipe } from './placa/pipe';\n\nimport { percentage } from './percentage/validator';\nimport { PERCENTAGEValidator } from './percentage/directive';\nimport { PERCENTAGEPipe } from './percentage/pipe';\n\nimport { renavam } from './renavam/validator';\nimport { RenavamValidator } from './renavam/directive';\nimport { RenavamPipe } from './renavam/pipe';\n\nimport { pispasep } from './pispasep/validator';\nimport { PispasepValidator } from './pispasep/directive';\nimport { PispasepPipe } from './pispasep/pipe';\n\nimport { rg } from './rg/validator';\nimport { RGValidator } from './rg/directive';\nimport { RGPipe } from './rg/pipe';\n\nimport { time } from './time/validator';\nimport { TIMEValidator } from './time/directive';\nimport { TIMEPipe } from './time/pipe';\n\nimport { titulo } from './titulo/validator';\nimport { TITULOValidator } from './titulo/directive';\nimport { TITULOPipe } from './titulo/pipe';\nimport { utilsBr } from 'js-brasil';\nimport { TextMaskModule } from './angular2TextMask';\n\nexport const TextMask = {\n  TextMaskModule\n};\n\nexport const NgBrazilValidators: any = {\n  cpf,\n  cnpj,\n  celular,\n  cep,\n  currency,\n  inscricaoestadual,\n  number,\n  pispasep,\n  placa,\n  percentage,\n  renavam,\n  rg,\n  telefone,\n  time,\n  titulo\n}\n\nexport const MASKS = utilsBr.MASKS;\nexport const CustomDirectives = [\n  CelularValidator,\n  CelularPipe,\n  CEPValidator,\n  CEPPipe,\n  CPFValidator,\n  CPFPipe,\n  CNPJValidator,\n  CNPJPipe,\n  CURRENCYValidator,\n  CURRENCYPipe,\n  InscricaoEstadualValidator,\n  InscricaoEstadualPipe,\n  NUMBERValidator,\n  NUMBERPipe,\n  PERCENTAGEValidator,\n  PERCENTAGEPipe,\n  PispasepValidator,\n  PispasepPipe,\n  PLACAValidator,\n  PLACAPipe,\n  RenavamValidator,\n  RenavamPipe,\n  RGValidator,\n  RGPipe,\n  TelefoneValidator,\n  TelefonePipe,\n  TIMEValidator,\n  TIMEPipe,\n  TITULOValidator,\n  TITULOPipe\n];\n\nexport const NgBrDirectives = {\n  CelularValidator,\n  CelularPipe,\n  CEPValidator,\n  CEPPipe,\n  CNPJValidator,\n  CNPJPipe,\n  CPFValidator,\n  CPFPipe,\n  CURRENCYValidator,\n  CURRENCYPipe,\n  InscricaoEstadualValidator,\n  InscricaoEstadualPipe,\n  NUMBERValidator,\n  NUMBERPipe,\n  PERCENTAGEValidator,\n  PERCENTAGEPipe,\n  PispasepValidator,\n  PispasepPipe,\n  PLACAValidator,\n  PLACAPipe,\n  RGValidator,\n  RGPipe,\n  RenavamValidator,\n  RenavamPipe,\n  TelefoneValidator,\n  TelefonePipe,\n  TIMEValidator,\n  TIMEPipe,\n  TITULOValidator,\n  TITULOPipe\n};\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    CustomDirectives\n  ],\n  exports: [\n    CustomDirectives\n  ]\n})\nclass NgBrazil {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgBrazil\n    };\n  }\n}\nexport {\n  NgBrazil\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {MASKEDINPUT_VALUE_ACCESSOR as Éµa,MaskedInputDirective as Éµb,TextMaskModule as Éµc} from './angular2TextMask';\nexport {CelularValidator as Éµs} from './celular/directive';\nexport {CelularPipe as Éµt} from './celular/pipe';\nexport {celular as Éµf} from './celular/validator';\nexport {CEPValidator as Éµu} from './cep/directive';\nexport {CEPPipe as Éµv} from './cep/pipe';\nexport {cep as Éµg} from './cep/validator';\nexport {CNPJValidator as Éµy} from './cnpj/directive';\nexport {CNPJPipe as Éµz} from './cnpj/pipe';\nexport {cnpj as Éµe} from './cnpj/validator';\nexport {CPFValidator as Éµw} from './cpf/directive';\nexport {CPFPipe as Éµx} from './cpf/pipe';\nexport {cpf as Éµd} from './cpf/validator';\nexport {CURRENCYValidator as Éµba} from './currency/directive';\nexport {CURRENCYPipe as Éµbb} from './currency/pipe';\nexport {currency as Éµh} from './currency/validator';\nexport {InscricaoEstadualValidator as Éµbc} from './inscricaoestadual/directive';\nexport {InscricaoEstadualPipe as Éµbd} from './inscricaoestadual/pipe';\nexport {inscricaoestadual as Éµi} from './inscricaoestadual/validator';\nexport {NUMBERValidator as Éµbe} from './number/directive';\nexport {NUMBERPipe as Éµbf} from './number/pipe';\nexport {number as Éµj} from './number/validator';\nexport {PERCENTAGEValidator as Éµbg} from './percentage/directive';\nexport {PERCENTAGEPipe as Éµbh} from './percentage/pipe';\nexport {percentage as Éµm} from './percentage/validator';\nexport {PispasepValidator as Éµbi} from './pispasep/directive';\nexport {PispasepPipe as Éµbj} from './pispasep/pipe';\nexport {pispasep as Éµk} from './pispasep/validator';\nexport {PLACAValidator as Éµbk} from './placa/directive';\nexport {PLACAPipe as Éµbl} from './placa/pipe';\nexport {placa as Éµl} from './placa/validator';\nexport {RenavamValidator as Éµbm} from './renavam/directive';\nexport {RenavamPipe as Éµbn} from './renavam/pipe';\nexport {renavam as Éµn} from './renavam/validator';\nexport {RGValidator as Éµbo} from './rg/directive';\nexport {RGPipe as Éµbp} from './rg/pipe';\nexport {rg as Éµo} from './rg/validator';\nexport {TelefoneValidator as Éµbq} from './telefone/directive';\nexport {TelefonePipe as Éµbr} from './telefone/pipe';\nexport {telefone as Éµp} from './telefone/validator';\nexport {TIMEValidator as Éµbs} from './time/directive';\nexport {TIMEPipe as Éµbt} from './time/pipe';\nexport {time as Éµq} from './time/validator';\nexport {TITULOValidator as Éµbu} from './titulo/directive';\nexport {TITULOPipe as Éµbv} from './titulo/pipe';\nexport {titulo as Éµr} from './titulo/validator';"],"names":["getDOM"],"mappings":"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"}